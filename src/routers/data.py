from aiogram import types, F, Router
from aiogram.fsm.context import FSMContext
from src.keyboards.client_kb import eng_levels
import asyncio
from aiogram.fsm.state import State, StatesGroup
import src.utils.database as db
from src.keyboards.basic import cancel_kb

data_router = Router()


class NewOrder(StatesGroup):
    eng_level = State()
    name = State()
    surname = State()
    phone = State()
    user_id = State()


@data_router.message(F.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è')
async def cmd_reg(message: types.Message, state: FSMContext):
    await state.set_state(NewOrder.eng_level)

    await message.answer('–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–≤–æ–µ –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ —É–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —è–∑—ã–∫–æ–º ',
                         reply_markup=eng_levels())


@data_router.message(NewOrder.eng_level)
async def cmd_answer(message: types.Message, state: FSMContext):
    await state.update_data(eng_level=message.text)
    await state.set_state(NewOrder.name)

    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è',
                         reply_markup=cancel_kb())


@data_router.message(NewOrder.name)
async def cmd_answer(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(NewOrder.surname)

    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é',
                         reply_markup=cancel_kb())


@data_router.message(NewOrder.surname)
async def cmd_answer(message: types.Message, state: FSMContext):
    await state.update_data(surname=message.text)
    await state.set_state(NewOrder.phone)

    await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                         reply_markup=cancel_kb())


@data_router.message(NewOrder.phone)
async def cmd_answer(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.update_data(user_id=message.from_user.id)

    await db.add_item(state)
    await state.clear()

    await message.answer(
        '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, —Ç—ã –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–≥–æ –∫–ª—É–±–∞ Debate Clubs c –í–∏—Ç–∞–ª–∏–µ–º –°–µ–ª—é–Ω–æ–ºü•≥'
        '–ó–∞–Ω—è—Ç–∏–µ –ø—Ä–æ–π–¥–µ—Ç –≤ —Å—É–±–±–æ—Ç—É –≤ 11:00. –°—Å—ã–ª–∫—É –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ –≤—ã—à–ª–µ–º –ø–µ—Ä–µ–¥ –∑–∞–Ω—è—Ç–∏–µ–º.'
    )

    await asyncio.sleep(20)

    await message.answer(
        '–ê –ø–æ–∫–∞ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏\n'
        'P.S. —Ç–∞–º –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –≤–∏–¥–µ–æ –æ—Ç –Ω–∞—à–∏—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π:\n'
        'Instagram: https://www.instagram.com/yesgrodno/\n'
        'TikTok: https://www.tiktok.com/@yesgrodno\n'
    )

